---
# Pull Module Descriptor
- name: Get Module Descriptor
  uri:
    url: "{% if okapi_pull or preview %}{{ okapi_url }}{% else %}{{ folio_registry }}{% endif %}/_/proxy/modules/{{module_item.name}}{% if module_item.version %}-{{module_item.version }}{% endif %}?full=true"
    return_content: yes
  register: result
- name: Set Module Descriptor
  set_fact:
    module_descriptor: "{{ result.json }}"

# set JAVA_OPTIONS
- name: Set JAVA_OPTIONS
  set_fact:
    java_options: "{{ module_descriptor | json_query(query) | default(default_opts, true) }}"
  vars:
    query: "env[?name == 'JAVA_OPTIONS'].value"
    default_opts: "-Xmx256m"

# set DATABASE variable
# if metadata.databaseConnection not set - default set to true
# When all modules that need DB connection have set metadata.databaseConnection change the default to false
- name: Set database from Desciptor
  set_fact:
    mod_database: "{{ module_descriptor | json_query('metadata.databaseConnection') | default(true, true) }}"

# Create Kubernetes Service
- name: create Service
  k8s:
    state: "{{ k8s_state }}"
    definition: "{{ lookup('template', 'module-service.yml.j2') }}"

# Create Kubernetes Deployment
- name: create Deployment
  k8s:
    state: "{{ k8s_state }}"
    definition: "{{ lookup('template', 'module-deployment.yml.j2') }}"

- name: Check module registration
  uri:
    url: "{{ okapi_url }}/_/proxy/modules/{{module_item.name}}{% if module_item.version %}-{{module_item.version }}{% endif %}"
    headers:
     X-Okapi-Tenant: "supertenant"
     Accept: application/json, text/plain
    status_code: 200, 404
  register: mod_reg_status

# POST module descriptor to Okapi
- name: POST module descriptor to Okapi
  uri:
    url: "{{ okapi_url }}/_/proxy/modules"
    method: POST
    body: "{{ module_descriptor | to_json}}"
    status_code: 201
    body_format: json
    headers:
      X-Okapi-Tenant: "supertenant"
      X-Okapi-Token: "{{ supertenant_token | default('') }}"
      Accept: application/json, text/plain
  register: mod_reg
  changed_when: mod_reg.status == 201
  when: not okapi_pull and mod_reg_status.status == 404

# POST deployment descriptor to Okapi
- name: POST deployment descriptor to Okapi
  uri:
    url: "{{ okapi_url }}/_/discovery/modules"
    method: POST
    body: "{{ lookup('template', 'deployment-descriptor.json.j2') | to_json}}"
    status_code: 201
    body_format: json
    headers:
      X-Okapi-Tenant: "supertenant"
      X-Okapi-Token: "{{ supertenant_token | default('') }}"
      Accept: application/json, text/plain
  register: mod_dep
  changed_when: mod_dep.status == 201
  when: mod_name not in deployed_modules
  vars:
    mod_name: "{{module_item.name}}{% if module_item.version %}-{{module_item.version }}{% endif %}"

