---
# Note: admin user must be bootstrapped and have mod-permissions perms
# Requires mod-permissions >= 5.1.0
- name: Login as {{ admin_user.username }}
  uri:
    url: "{{ okapi_url }}/bl-users/login"
    method: POST
    body_format: json
    headers:
      X-Okapi-Tenant: "{{ tenant }}"
      Accept: 'application/json, text/plain'
    body: "{ 'username' : '{{ admin_user.username }}', 'password' : '{{ admin_user.password }}' }"
    status_code: 201
  register: tenant_admin_login

- name: "Get all permissionSets excluding okapi.*, modperms.*, and SYS#*"
  # cql query for cql.allRecords=1 not permissionName==okapi.* not permissionName==modperms.* not permissionName==SYS#*
  uri:
    url: "{{ okapi_url }}/perms/permissions?query=cql.allRecords%3D1%20not%20permissionName%3D%3Dokapi.%2A%20not%20permissionName%3D%3Dperms.users.assign.okapi%20not%20permissionName%3D%3Dmodperms.%2A%20not%20permissionName%3D%3DSYS%23%2A&length=5000"
    method: GET
    headers:
      Accept: "application/json, text/plain"
      X-Okapi-Tenant: "{{ tenant }}"
      X-Okapi-Token: "{{ tenant_admin_login.x_okapi_token|default('token') }}"
  register: all_permissions

- name: Fail if all permissionSets not retrieved
  fail:
    msg: "Retrieved permissions ({{ all_permissions.json.permissions|default([])|length }}) don't match total permissions count ({{ all_permissions.json.totalRecords|default('no totalRecords key') }})"
  when: all_permissions.json.permissions|length != all_permissions.json.totalRecords

- name: Set top level permissions list
  set_fact:
    top_level_perms: "{{ all_permissions.json|to_json|from_json|json_query(permissions_query) }}"
  vars:
    permissions_query: "permissions[?length(childOf[?starts_with(@,'SYS#')]) == length(childOf)].permissionName"

- name: Assign permissions to {{ admin_user.username }}
  uri:
    url: "{{ okapi_url }}/perms/users/{{ tenant_admin_login.json.permissions.id }}/permissions"
    method: POST
    headers:
      X-Okapi-Tenant: "{{ tenant }}"
      X-Okapi-Token: "{{ tenant_admin_login.x_okapi_token|default('token') }}"
      Accept: application/json
    body: '{ "permissionName" : "{{ item }}" }'
    body_format: json
    status_code: 200
  when: "[ item ]|difference(tenant_admin_login.json.permissions.permissions)"
  register: tenant_admin_permissions
  changed_when: tenant_admin_permissions.status == 200
  loop: "{{ top_level_perms }}"

# This is horrible
- name: Wait for permissions cache to update for admin user
  wait_for: timeout=60
  when: tenant_admin_permissions.changed|default(false)
