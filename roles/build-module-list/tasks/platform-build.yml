---
# Build the enable_json and deploy_json data structures from Okapi
# dependency resolution
- name: Move to Node.js lts
  become: yes
  shell: n lts && touch {{ stripes_platform }}/.set_nodedefault_ansible
  args:
    creates: "{{ stripes_platform }}/.set_nodedefault_ansible"

- name: Build stripes module descriptors
  become: yes
  shell: "yarn build-module-descriptors"
  args:
    chdir: "{{ stripes_platform }}"
    creates: "{{ stripes_platform }}/ModuleDescriptors"

- name: Get module descriptor filenames
  shell: "ls {{ stripes_platform }}/ModuleDescriptors"
  register: mod_descrs_files
  changed_when: false

- name: Set platform_list
  set_fact:
    platform_list: "{{ platform_list|default([]) }} + [ '{{ item }}' ]"
  with_items: "{{ mod_descrs_files.stdout_lines }}"

- name: Bump stripes-core to the top of the list
  set_fact: platform_list="['stripes-core.json'] + {{ platform_list|difference(['stripes-core.json']) }}"

- name: Slurp module descriptors
  slurp: src={{ stripes_platform }}/ModuleDescriptors/{{ item }}
  with_items: "{{ platform_list }}"
  register: mod_descrs_raw

- name: Build platform_descrs
  set_fact:
    platform_descrs: "{{ platform_descrs|default([]) }} + [ {{ item.content|b64decode|from_json }} ]"
  with_items: "{{ mod_descrs_raw.results }}"

- name: Build module list from Stripes mod descriptors
  set_fact:
    stripes_module_list: "{{ stripes_module_list|default([]) + [ { 'id': item.id, 'action': 'enable' } ] }}"
  when: item.id|regex_replace('(^[\\w\\-]+)\\-\\d.*$', '\\1') not in stripes_exclude_list
  with_items: "{{ platform_descrs }}"

- name: Set install_list
  set_fact: install_list={{ stripes_module_list }}

- name: Add additional modules to install_list
  set_fact:
    install_list: "{{ install_list }} + [ { 'id': item, 'action': 'enable' } ]"
  with_items: "{{ add_modules }}"

- name: Add pinned modules to install_list
  set_fact: install_list='{{ install_list }} { "id":"{{ item.module }}-{{ item.version }}", "action":"enable" },'
  with_items: "{{ pinned_modules }}"

- name: Get dependencies for modules from Okapi
  uri:
    url: "{{ okapi_url }}/_/proxy/tenants/{{ tenant }}/install?simulate=true"
    method: POST
    headers:
      X-Okapi-Tenant: supertenant
      Accept: application/json
      X-Okapi-Token: "{{ supertenant_token | default('') }}"
    body_format: json
    body: "{{ install_list }}"
  register: module_deps

- name: Build module_deps_list, remove modules that are pinned
  set_fact:
    module_deps_list: "{{ module_deps_list|default([]) }} + [{{ item.0 }}]"
  when: item[0].id|regex_search(item[1].module) != item[1].module
  with_nested:
    - "{{ module_deps.json }}"
    - "{{ pinned_modules }}"

- name: Set module_deps_list if empty
  set_fact:
    module_deps_list: "{{ module_deps.json }}"
  when: module_deps_list is not defined

- name: Build pinned_modules_list
  set_fact:
    pinned_modules_list: "{{ pinned_modules_list|default([]) + [ { 'id': item.module + '-' + item.version, 'action': 'enable' } ] }}"
  with_items: "{{ pinned_modules }}"

- name: Combine lists
  set_fact:
    module_deps_list: "{{ pinned_modules_list|default([])|union(module_deps_list)|unique }}"

- name: Build list from module_deps_list
  set_fact:
    tmp_folio_modules: "{{ tmp_folio_modules|default([]) + [ { 'name': item.id|regex_replace('^(.*)-((0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*).*)$','\\1'), 'version': item.id|regex_replace('^(.*)-((0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*).*)','\\2') } ] if item.id|regex_search('-((0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*).*)$') else tmp_folio_modules|default([]) + [ { 'name': item.id } ] }}"
  with_items: "{{ module_deps_list }}"
