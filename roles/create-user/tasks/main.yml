---
- name: Login as {{ admin_user.username }}
  uri:
    url: "{{ okapi_url }}/authn/login"
    method: POST
    body_format: json
    headers:
      X-Okapi-Tenant: "{{ tenant }}"
      Accept: 'application/json, text/plain'
    body: "{ 'username' : '{{ admin_user.username }}', 'password' : '{{ admin_user.password }}' }"
    status_code: 201
  register: tenant_admin_login

- name: Check for user record
  uri:
    url: "{{ okapi_url }}/users?query=username%3d%3d{{ username }}"
    headers:
      Accept: "application/json, text/plain"
      X-Okapi-Tenant: "{{ tenant }}"
      X-Okapi-Token: "{{ tenant_admin_login.x_okapi_token|default('token') }}"
  register: check_user

- name: Get user ID if user already exists
  set_fact:
    user_id: "{{ check_user.json.users.0.id }}"
  when: check_user.json.totalRecords > 0

- name: Create user record
  uri:
    url: "{{ okapi_url }}/users"
    method: POST
    body_format: json
    headers:
      Accept: "application/json, text/plain"
      X-Okapi-Tenant: "{{ tenant }}"
      X-Okapi-Token: "{{ tenant_admin_login.x_okapi_token|default('token') }}"
    body: |
      {
        "username": "{{ username }}",
        "active": true,
        "personal": {
          "lastName": "{{ last_name|default('') }}",
          "firstName": "{{ first_name|default('') }}",
          "email": "{{ email|default('') }}"
        }
      }
    status_code: 201
  register: create_user
  changed_when: create_user.status == 201
  when: check_user.json.totalRecords == 0

- name: Set user ID from new record
  set_fact:
    user_id: "{{ create_user.json.id }}"
  when: check_user.json.totalRecords == 0

- name: Check for login record
  uri:
    url: "{{ okapi_url }}/authn/credentials-existence?userId={{ user_id }}"
    headers:
      Accept: "application/json, text/plain"
      X-Okapi-Tenant: "{{ tenant }}"
      X-Okapi-Token: "{{ tenant_admin_login.x_okapi_token|default('token') }}"
  register: check_login

- name: Create login record
  uri:
    url: "{{ okapi_url }}/authn/credentials"
    method: POST
    body_format: json
    headers:
      Accept: "application/json, text/plain"
      X-Okapi-Tenant: "{{ tenant }}"
      X-Okapi-Token: "{{ tenant_admin_login.x_okapi_token|default('token') }}"
    body: |
      {
        "userId": "{{ user_id }}",
        "password": "{{ password }}"
      }
    status_code: 201
  register: create_login
  changed_when: create_login.status == 201
  when: check_login.json.credentialsExist == false

- name: Check for permissions record
  uri:
    url: "{{ okapi_url }}/perms/users?query=userId%3d%3d{{ user_id }}"
    headers:
      Accept: "application/json, text/plain"
      X-Okapi-Tenant: "{{ tenant }}"
      X-Okapi-Token: "{{ tenant_admin_login.x_okapi_token|default('token') }}"
  register: check_perms

- name: Create permissions record
  uri:
    url: "{{ okapi_url }}/perms/users"
    method: POST
    body_format: json
    headers:
      Accept: "application/json, text/plain"
      X-Okapi-Tenant: "{{ tenant }}"
      X-Okapi-Token: "{{ tenant_admin_login.x_okapi_token|default('token') }}"
    body: |
      {
        "userId": "{{ user_id }}",
        "permissions": [
        {% for perm in permissions|default([]) %}
          "{{ perm }}"{% if not loop.last %},{% endif %}
        {% endfor %}
        ]
      }
    status_code: 201
  register: create_login
  changed_when: create_login.status == 201
  when: check_perms.json.totalRecords == 0
