---
# Role to tidy up a Vagrant box for packaging
- name: Stop okapi container
  become: yes
  docker_container:
    name: okapi
    state: stopped

- name: Prune containers for backend modules
  become: yes
  command: "/usr/bin/docker system prune -f --volumes --filter label!=service"

- name: Stop services
  become: yes
  service: name={{ item }} state=stopped
  with_items:
    - docker
    - postgresql

# packer sticks this in here?
- name: Remove guest additions ISO, if there
  become: yes
  file:
    path: "/home/vagrant/VBoxGuestAdditions.iso"
    state: absent

- name: Remove Docker repo credentials
  become: yes
  file:
    path: "~/.docker"
    state: absent

# Use rm to avoid errors from file module
- name: Clean up stripes build directory node_modules
  become: yes
  command: "rm -rf {{ stripes_conf_dir|default('/etc/folio/stripes') }}/node_modules"
  ignore_errors: yes

- name: Clean up stripes build directory output
  become: yes
  file:
    path: "{{ stripes_conf_dir|default('/etc/folio/stripes') }}/output"
    state: absent

- name: Clean out yarn cache
  become: yes
  command: "/usr/bin/yarn cache clean --all"
  ignore_errors: yes

- name: Remove root bash history
  become: yes
  file:
    path: /root/.bash_history
    state: absent

- name: Remove vagrant bash history
  file:
    path: /home/vagrant/.bash_history
    state: absent

- name: apt autoremove
  become: yes
  apt: autoremove=yes

- name: Clear out apt cache
  become: yes
  command: /usr/bin/apt-get clean -y

- name: Clean up log files
  become: yes
  shell:
    cmd: "find /var/log -type f | while read f; do echo -ne '' > $f; done;"

# Note that vagrant-tidy.sh destroys all free disk space!
- name: Copy vagrant-tidy.sh to /root
  become: yes
  copy: src=vagrant-tidy.sh dest=/root/vagrant-tidy.sh mode=0700

- name: Run vagrant-tidy.sh
  become: yes
  command: /root/vagrant-tidy.sh
