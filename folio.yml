---
# Ansible playbook to deploy Okapi and FOLIO modules
# Provision a host as a backend FOLIO system
- hosts: all
  become: yes
  become_method: sudo
  gather_facts: no
  tasks:
    - name: Bootstrap Python 3
      raw: test -e /usr/bin/python3 || (apt -qqy update && apt install -qy python3-minimal)
      register: python3_output
      changed_when: python3_output.stdout != ""
    - name: Use Python 3 for Ansible
      set_fact:
        ansible_python_interpreter: /usr/bin/python3

- hosts: all
  roles:
    - common
    - role: postgresql
      pg_max_conn: 1000
    - docker-engine
    - kafka-zk
    - okapi-docker-container

# Additional infrastructure for platform-complete builds
- hosts: testing:snapshot:release
  roles:
    - role: minio-docker # for multiple modules
      minio_buckets:
        - "{{ lists_app_bucket_name | default('lists-app-bucket') }}" # mod-lists requires the bucket to be created ahead of time
    - role: elasticsearch # for mod-search

# Configure builds
# Need to build the webpack early to allow enough RAM for the build
# But don't want to register or enable modules at this point
#
# Deprecated: FOLIO-3419
- name: Configure testing build
  hosts: testing
  pre_tasks:
    - name: set data export and erm AWS URL for minio
      set_fact:
        data_export_aws_url: "http://{{ ansible_default_ipv4.address }}:{{ minio_port|default('9000') }}"
        erm_aws_url: "http://{{ ansible_default_ipv4.address }}:{{ minio_port|default('9000') }}"
  roles:
    - role: stripes-build
      okapi_register_modules: false
      okapi_enable_modules: false
    - okapi-register-modules
    - tenant-data
    - okapi-tenant-deploy
    - create-tenant-admin
    - tenant-admin-permissions
    - set-patron-group

# Configure build for top-down deployment
# (Okapi dependency resolution)
- name: Configure snapshot build
  hosts: snapshot
  pre_tasks:
    - name: set AWS URLs for minio
      set_fact:
        data_export_aws_url: "http://{{ ansible_default_ipv4.address }}:{{ minio_port|default('9000') }}"
        erm_aws_url: "http://{{ ansible_default_ipv4.address }}:{{ minio_port|default('9000') }}"
        oai_pmh_aws_url: "http://{{ ansible_default_ipv4.address }}:{{ minio_port|default('9000') }}"
        mod_elinks_aws_url: "http://{{ ansible_default_ipv4.address }}:{{ minio_port|default('9000') }}"
        mod_marc_migrations_aws_url: "http://{{ ansible_default_ipv4.address }}:{{ minio_port|default('9000') }}"
        lists_app_aws_url: "http://{{ ansible_default_ipv4.address }}:{{ minio_port|default('9000') }}"
  roles:
    - role: stripes-build
      okapi_register_modules: false
      okapi_enable_modules: false
    - okapi-pull
    - tenant-data
    - role: build-module-list
      stripes_platform: /etc/folio/stripes
    - okapi-deployment
    - role: okapi-tenant-deploy
      create_db: no
      module_env: []
    - create-tenant-admin
    - tenant-admin-permissions
    - set-patron-group
    - ldp
    - mod-ldp-config

- name: Configure release build
  hosts: release-core:release
  pre_tasks:
    - name: set data export and erm AWS URL for minio
      set_fact:
        data_export_aws_url: "http://{{ ansible_default_ipv4.address }}:{{ minio_port|default('9000') }}"
        erm_aws_url: "http://{{ ansible_default_ipv4.address }}:{{ minio_port|default('9000') }}"
  roles:
    - role: stripes-build
      okapi_register_modules: false
      okapi_enable_modules: false
    - okapi-pull
    - tenant-data
    - build-module-list
    - okapi-deployment
    - role: okapi-tenant-deploy
      create_db: no
      module_env: []
    - create-tenant-admin
    - tenant-admin-permissions
    - set-patron-group
    - ldp
    - mod-ldp-config

# Edge modules
- name: Set up Okapi to support edge modules
  hosts: testing
  roles:
    - role: okapi-register-modules
      folio_modules:
        - name: mod-oai-pmh
        - name: mod-rtac
        - name: mod-gobi
        - name: edge-oai-pmh
        - name: edge-rtac
        - name: edge-orders
    - role: okapi-tenant-deploy
      folio_modules:
        - name: mod-oai-pmh
          deploy: yes
        - name: mod-rtac
          deploy: yes
        - name: mod-gobi
          deploy: yes
        - name: edge-oai-pmh
        - name: edge-rtac
        - name: edge-orders
    - tenant-admin-permissions

- name: Set up edge modules
  hosts: testing:snapshot:release
  roles:
    - role: edge-module
      edge_module: edge-rtac
      edge_module_publish_port: 9700
      edge_module_path: /prod/rtac
      edge_module_expose_port: 8081
      edge_module_docker_env:
        LOG4J_FORMAT_MSG_NO_LOOKUPS: "true"
      auth_required: yes
      inst_user_perms:
        - rtac.all
    - role: edge-module
      edge_module: edge-oai-pmh
      edge_module_publish_port: 9701
      edge_module_path: /oai
      edge_module_expose_port: 8081
      edge_module_docker_env:
        LOG4J_FORMAT_MSG_NO_LOOKUPS: "true"
      auth_required: yes
      inst_user_perms:
        - oai-pmh.all
      edge_extra_tenants:
        - tenant_id: test_oaipmh
          inst_user:
            username: test-user
            password: test
    - role: edge-module
      edge_module: edge-orders
      edge_module_publish_port: 9702
      edge_module_path: /orders
      edge_module_expose_port: 8081
      edge_module_docker_env:
        LOG4J_FORMAT_MSG_NO_LOOKUPS: "true"
      auth_required: yes
      inst_user_perms:
        - gobi.all
        - ebsconet.all
      edge_extra_tenants:
        - tenant_id: test_edge_orders
          inst_user:
            username: test-user
            password: test
    - role: edge-module
      edge_module: edge-inn-reach
      edge_module_publish_port: 9703
      edge_module_path: /innreach
      edge_module_expose_port: 8081
      edge_module_docker_env:
        JAVA_OPTIONS: "-XX:MaxRAMPercentage=66.0"
        LOG4J_FORMAT_MSG_NO_LOOKUPS: "true"
      edge_module_cmd: "--okapi_url={{edge_module_okapi_url}} --secure_store_props=/mnt/{{ edge_module }}-ephemeral.properties"
      inst_user:
        username: "innreachClient"
        password: "admin"
        personal:
          lastName: SYSTEM
          firstName: innreachClient
      inst_user_perms:
        - inn-reach.all
      edge_http_version: 1.1
      edge_extra_tenants:
        - tenant_id: test_edge_inn_reach
          inst_user:
            username: innreachClient
            password: "password"
      edge_tenants_mappings:
        - tenant: "{{ tenant }}"
          mapping: fli01
        - tenant: "test_edge_inn_reach"
          mapping: "5858f9d8-1558-4513-aa25-bad839eb803a"

# Sample data for snapshot-core, testing, snapshot
- name: Add sample users for permissions testing
  hosts: testing:snapshot:release
  roles:
    - add-users

- name: Add testing_admin user for diku with okapi.all permissions
  hosts: snapshot-core:snapshot:testing-core:testing:release-core:release
  roles:
    - role: create-user
      username: testing_admin
      password: admin
      permissions:
        - okapi.all

# Set up stripes
- name: Build stripes webpack, assign permissions
  hosts: stripes-build
  roles:
    - role: stripes-build
      build_webpack: no
    - tenant-admin-permissions

- name: Build Stripes webpack and container, assign permissions
  hosts: stripes
  roles:
    - stripes-docker
    - tenant-admin-permissions

- name: Build Stripes container
  hosts: stripes-docker
  roles:
    - stripes-docker

- name: Install Stripes on local installed nginx
  hosts: stripes-nginx
  roles:
    - stripes-nginx
    - tenant-admin-permissions

- name: Secure Okapi Supertenant
  hosts: production
  roles:
    - okapi-secure

# Roles for packaging
- hosts: vagrant
  tasks:
    - name: Install maven
      become: yes
      apt:
        name:
          - maven

- hosts: packer
  roles:
    - vagrant-tidy
